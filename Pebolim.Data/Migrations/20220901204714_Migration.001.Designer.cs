// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pebolim.Data.Context;

#nullable disable

namespace Pebolim.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220901204714_Migration.001")]
    partial class Migration001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pebolim.Domain.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Base64Flag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FormationId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryColour")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryColour")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormationId");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("Team", (string)null);
                });

            modelBuilder.Entity("Pebolim.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("char(64)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("char(64)")
                        .HasColumnName("Salt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Pebolim.Domain.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ProfileName");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("Pebolim.Domain.Enumerations.Formation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Formation");
                });

            modelBuilder.Entity("Pebolim.Domain.Entities.Team", b =>
                {
                    b.HasOne("Pebolim.Domain.Enumerations.Formation", "Formation")
                        .WithMany()
                        .HasForeignKey("FormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pebolim.Domain.Entities.UserProfile", "UserProfile")
                        .WithOne("Team")
                        .HasForeignKey("Pebolim.Domain.Entities.Team", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Formation");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Pebolim.Domain.Entities.UserProfile", b =>
                {
                    b.HasOne("Pebolim.Domain.Entities.User", "User")
                        .WithMany("UserProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pebolim.Domain.Entities.User", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("Pebolim.Domain.Entities.UserProfile", b =>
                {
                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
